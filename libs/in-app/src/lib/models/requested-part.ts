import { Quotation } from '../models/quotation';
export class RequestedPart {
  RequestedPartID: number;
  AccidentPartID: number;
  AccidentID: number;
  AutomotivePartID: number;
  AutomotivePartName: string;
  ConditionTypeID: number = 2;
  ConditionTypeName: string;
  NewPartConditionTypeID: number = 10;
  NewPartConditionTypeName: string;
  ConditionTypeNameArabic: string;
  NewPartConditionTypeArabicName: string;
  OriginalNewPartConditionTypeID: number;
  DesiredPrice: number;
  Quantity: number = 1;
  DesiredManufacturerID: number;
  DesiredManufacturerName: string;
  RequestID: number;
  DemandID: number;
  DemandedQuantity: number;
  CreatedOn: Date;
  CreatedBy: number;
  ModifiedBy: number;
  ModifiedOn: Date;
  IsDeleted: boolean;
  PartImgURL: string;
  EncryptedName: string;
  CompanyID: number;
  NoteInfo: string;
  ImageRef: number;
  IsAvailableNow: number = 6;
  DeliveryTime: number;
  Price: number;
  IsIncluded: boolean;
  IsNew: boolean;
  QuotationPartID: number;
  IsSelected: boolean;
  DesiredManufacturerRegionID: number = 1;
  DesiredManufacturerRegionName: string;
  OriginalConditionTypeID: number;
  PartBranchID: number;
  Rating: number;
  IsEdit: boolean = false;
  IsAccepted: boolean;
  RejectReason: string;
  isSpliced: number;
  IsPartApproved: boolean;
  PartRejectReason: string;
  CreatedByName: string;
  IsDuplicate: boolean = false;
  IsModified: boolean = false;
  ESignatureURL: string;
  IsPartAvailable: number;
  RecommendedSupplierID: number;
  RecommendedSupplierName: string;
  MinPriceQuotationPartID: number;
  MinPrice: number;
  IsRecommended: boolean;
  IsBringOldPart:boolean;

  EventDateTime: Date;
  ModifiedByName: string;
  CreatedByEmail: string;
  ModifiedByEmail: string;
  ApprovedByName:string;
  ApprovedOn:Date;
  ItemNumber: string;
  DamagePointID: string;
  PartStatus: number;
  isExistInAccident: boolean = false;
  DamageName: string;
  Name1: string;
  DraftPartID: number;
  DraftID: number;
  QuotationPartPrice: number;
  FinalCode:string;
  MaxRequestedPartPrice : number;
  MinRequestedPartPrice : number;
  AvgRequestedPartPrice : number;
  IsCheck: number = 0;
  IsUniversal: number;
  UsedPriceByUser: number;
  NewOriginalPriceByUser: number;
  NewAfterMarketPriceByUser: number;
  UniversalPartPriceByUser: number;
}
