

export class Quotation {
  QuotationID: number;
  DemandID: number;
  RequestID: number;
  SupplierID: number;
  SupplierName: string;
  DeliveryTime: Date;
  StatusID: number;
  ArabicStatusName: string;
  StatusName: string;
  WillDeliver: boolean;
  DeliveryCost: number;
  CreatedOn: Date;
  CreatedSince: string;
  CreatedBy: number;
  ModifiedBy: number;
  ModifiedOn: Date;
  IsDeleted: boolean;
  CPEmail: string;
  CPPhone: string;
  Rating: number;
  PendingQuotationParts: number;
  InvoiceImage: string;
  CountDownTime: number;
  CountDownDate: Date;
  JoReviewNote: string;
  JoReviewStatusID: number;
  IcReviewStatusID: number;
  IsNotAvailable: boolean;
  ProcessedQuotationParts: number;
  QuotedPartCount: number;
  RequestPartCount: number;
  ShowText: boolean = false;
  BranchAreaName: string;
  BranchName: string;
  IsDiscountAvailable: boolean = false;
  DiscountValue: number;
  Comment: string;
  IsAllAddedToCart: boolean = false;
  CreatedSinceArabic: string;
  FillingRate: number;
  AddressLine1: string;
  BestOfferPrice: number = 0;
  DiscountedPrice:number;
  PaymentTypeID: number = 68;
  PaymentTypeName: string;
  PaymentTypeArabicName: string;
  RecommendationType:number;
  IsSupReferred:boolean = false;
  OriginalPrice:number;
  OriginalDiscountedPrice:number;
  SuggestedPrice:number;
  IsSuggestionAccepted:boolean;
  LowestOfferMatchingPrice:number;
  OldLowestOfferMatchingPrice:number;
  MatchingOfferSortNo: number;
  OfferSortNo: number;
  MatchingFillingRate: number;
  SupplierType: number;
  IsPartialSellings: boolean;
  IsSuggestedPriceSet: false;
  PreviousBestOfferPrice: number;
  PreviousOriginalPrice: number;
  PreviousLowestOfferMatchingPrice: number;
  TotalAmount: number;
  IsNeedToOrder: boolean;
  CounterOfferPrice: number;
  ISCounterOfferAccepted:boolean;
  SuggestionCounterTime: Date;
}
